/*
동등비교(==) 연산자는 좌항과 우항의 피연산자를 비교할 때 먼저 암묵적 타입 변환을 통해서
타입을 일치시킨 후 같은 값인지 비교한다. -> 결과를 예측하기 어렵고 실수하기 쉽다.

따라서 일치 비교(===) 연산자를 사용한다. 일치 비교 연산자는 좌항과 우항의 피연산자가
타입도 같고 값도 같은 경우에 한하여 true를 반환한다.

 */

// 일치 비교 연산의 예외의 경우
console.log(NaN === NaN);  // false - NaN은 자신과 다른 유일한 값

// 값이 NaN인지 조사하려면
console.log(Number.isNaN(NaN));  //true

// 양의 0과 음의 0의 일치 비교 연산
console.log(0===-0);  // true

//이러한 예외의 경우까지 예측가능한 결과를 확인할 수 있는 Object.is()가 ES6에서 도입됨

console.log(Object.is(NaN,NaN));  // true
console.log(Object.is(0,-0)); // false

// 부동등 비교 !=  (<-> ==)
// 불일치 비교 !== (<-> ===)