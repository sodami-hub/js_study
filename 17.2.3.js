/*
생성자함수의 역할
필수 - 인스턴스 생성
옵션 - 인스턴스의 초기화(this 프로퍼티를 사용해서 프로퍼티를 초기화한다.)

객체를 반환하는 코드는 보이지 않지만, new 연산자와 함께 함수를 호출하면
자스엔진은 다음과 같은 과정을 거쳐 암묵적으로 인스턴스를 생성하고 초기화하여 인스턴스를 반환한다.
*/

// 1. 인스턴스 생성과 this 바인딩
function Circle(radius) {
    console.log(this);  // Circle{}  -1. 암묵적으로 인스턴스가 생성되고 this에 바인딩 // 인스턴스 생성

    //2. this에 바인딩되어 있는 인스턴스를 초기화한다.
    this.radius = radius;
    this.getDiameter = function() {
        return 2*radius;
    };
    console.log(this); // 초기화된 인스턴스 확인!

    //3. 완성된 인스턴스의 바인딩된 this가 암묵적으로 반환된다.
    // 명시적으로 객체를 반환하면 암묵적인 this는 반환이 무시된다.
    // return {};  -> 생성자 함수의 return은 반드시 생략한다.
}

// Circle(x) 생성자 함수는 암묵적으로 this를 반환한다.
let circle = new Circle(5);
console.log(circle);

/*
2. 인스턴스 초기화
this에 바인딩되어 있는 인스턴스에 프로퍼티나 메서드를 추가하고 생성자 함수가 인수로 전달받은 초기값을
인스턴스 프로퍼티에 할당하여 초기화하거나 고정값을 할당한다.

3. 인스턴스 반환
내부의 모든 처리가 끝나면 인스턴스가 바인딩된 this를 암묵적으로 반환한다.
*/
